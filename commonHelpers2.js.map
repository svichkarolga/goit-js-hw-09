{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const feedbackFormEl = document.querySelector('.js-feedback-form');\nlet formData = {email: \"\", message: \"\"}; // щоб можна було перезаписувати дані, що ввів користувач коли користувач ввів інфу не сю, щоб введена частина не затерлася новою інфо\n\nconst onFormFieldChange = event => {\n  const fieldValue = event.target.value; // значення яке ввів користувач в формі ,буде зберігатися в змінну\n  const fieldName = event.target.name; // значення, яке буде записуватися в форм дата, те, що корист ввів в інпуті\n\n  formData[fieldName] = fieldValue; //  записуємо в наш обʼєкт ключ-значення\n\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData)); // відправляємо обʼект до локал сторидж => ключ придумали feedback-form-state а значення - рядок джейсон (приводимо датаформ до джейсон формата)\n  \n};\nfeedbackFormEl.addEventListener('input', onFormFieldChange);\n\n// зчитуємо форму з локал сторіджа, що користувач ввів раніше:\nconst fillFormFields = () => {\n  const formDataFromLS = JSON.parse(localStorage.getItem('feedback-form-state')); // дістаємо дані з локал сторіджа\n\n  if (formDataFromLS === null) {\n    return;  \n  }\n  formData = formDataFromLS;\n  // якщо рядки пусті -користувач нічого не ввів - то нічого не робимо, не заповнюємо форму\n  console.log(formDataFromLS);\n\n // заповнюємо форму з локал сторіджа, що користувач ввів раніше: (для цього перебираємо елементи форми в псевдомасиві елементс. в якості ключів -елемент нейм)\n\n  for (const key in formDataFromLS) {\n    if (formDataFromLS.hasOwnProperty(key)) // перевір власна чи не власна властив\n    {\n      console.log(formDataFromLS);\n      console.dir(feedbackFormEl.elements[key].value)\n      /*\n        1 Ітерація\n        key = 'user_name'\n\n        2 Ітерація\n        key = 'user_email'\n\n        3 Ітерація\n        key = 'user_message'\n      */\n      feedbackFormEl.elements[key].value = formDataFromLS[key];\n    }\n  }\n  };\nfillFormFields();\n\n// чистимо ел-ти форми після сабміту \n\n\nconst onFeedbackFormSubmit = event => {\n  event.preventDefault();\n\n  const email = feedbackFormEl.elements['email'].value.trim();\n  const message = feedbackFormEl.elements['message'].value.trim();\n\n  if (!email || !message) {\n    alert('Fill please all fields');\n    return;\n  }\n\n  event.target.reset(); // чистяться ел-ти форми\n  localStorage.removeItem('feedback-form-state'); // чиститься локал сторідж точечно по ключу\n   formData = { email: \"\", message: \"\" }; // чиститься обʼект formData\n};\nfeedbackFormEl.addEventListener('submit', onFeedbackFormSubmit);\n"],"names":["feedbackFormEl","formData","onFormFieldChange","event","fieldValue","fieldName","fillFormFields","formDataFromLS","key","onFeedbackFormSubmit","email","message"],"mappings":"wFAAA,MAAMA,EAAiB,SAAS,cAAc,mBAAmB,EACjE,IAAIC,EAAW,CAAC,MAAO,GAAI,QAAS,EAAE,EAEtC,MAAMC,EAAoBC,GAAS,CACjC,MAAMC,EAAaD,EAAM,OAAO,MAC1BE,EAAYF,EAAM,OAAO,KAE/BF,EAASI,CAAS,EAAID,EAEtB,aAAa,QAAQ,sBAAuB,KAAK,UAAUH,CAAQ,CAAC,CAEtE,EACAD,EAAe,iBAAiB,QAASE,CAAiB,EAG1D,MAAMI,EAAiB,IAAM,CAC3B,MAAMC,EAAiB,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAE7E,GAAIA,IAAmB,KAGvB,CAAAN,EAAWM,EAEX,QAAQ,IAAIA,CAAc,EAI1B,UAAWC,KAAOD,EACZA,EAAe,eAAeC,CAAG,IAEnC,QAAQ,IAAID,CAAc,EAC1B,QAAQ,IAAIP,EAAe,SAASQ,CAAG,EAAE,KAAK,EAW9CR,EAAe,SAASQ,CAAG,EAAE,MAAQD,EAAeC,CAAG,GAG7D,EACAF,IAKA,MAAMG,EAAuBN,GAAS,CACpCA,EAAM,eAAc,EAEpB,MAAMO,EAAQV,EAAe,SAAS,MAAS,MAAM,OAC/CW,EAAUX,EAAe,SAAS,QAAW,MAAM,OAEzD,GAAI,CAACU,GAAS,CAACC,EAAS,CACtB,MAAM,wBAAwB,EAC9B,MACD,CAEDR,EAAM,OAAO,QACb,aAAa,WAAW,qBAAqB,EAC5CF,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,CACtC,EACAD,EAAe,iBAAiB,SAAUS,CAAoB"}